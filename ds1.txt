26


{23,22,23,24,25,19,18,21}



int a =35;  ===== 1002   -- statement1
int b=&a; ==== *b; ---- 35; -- 
    *b;


primitivite ---- int , char , double , pointer


UD DS

Arrays(homogeneuous values) {10,11,13,14,15,16} , lists and files



Searching and Sorting 


10 11 12 13 14 15 -- 18 n=6 , 0 , n-1 = 5 


if return index of the value
else not found

LS
BS


Sorting 


10 14 12 23 14 15


10 12 14 14 15 23

MS
QS
BS
IS



Linear Search

{10 12 13 14 15 16} - case 1- 10 , case2-16 , case3-23

one by one fasion 


ele=10;
i=0;
ele= a[i]; // comparision part

i++;



return i;

0 --- 1sec
5 --- 6sec
23 --- 100000 , worst case scenario




Binary Search

{10 , 20 , 30 , 40 , 50 } low=0 , high=n-1=4

ele=30 - case1


mid = low+high/2 = 0+4/2=2

ele=mid;

return mid;




element = 10
ele<mid;  10 <30

left side of the array 10 , 20 , 30 ---- low =0 , high=mid-1 =2 mid=

			10 20 ---- 0
			10

else

right side of the array
50


low=mid+1

high=n-1

40 50




Sorting 

Rearranging elements ( Ascending Desending order )

Default - ascending

MS
BS
IS
QS



Divide and Conquer Technique - MS





QS

step1 : findout pivot element(last elemnt of array)
step2 : second pointer - 
step3: compare remaining elements with pivot , > greater than pivot .... swap with second pointer elements .




stack

top

top=-1 stack is empty
top=Max-1 stack is full


top=0 - max-1















